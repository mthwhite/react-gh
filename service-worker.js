"use strict";var precacheConfig=[["/react-gh/index.html","bb40cf450250c94cecf24d3da7be3f79"],["/react-gh/static/css/main.3bc4d97c.css","9c28ba52a810a1797fa1ce39ee890577"],["/react-gh/static/js/main.81fa7d55.js","f6c293881568f4f3449257f09987b34c"],["/react-gh/static/media/Back.bec135de.png","bec135de83635d5cdbb34d5cb3401472"],["/react-gh/static/media/BlankCard.2bd15b2c.png","2bd15b2c01c13a62eabe60ce6137b142"],["/react-gh/static/media/Bless.01e04797.png","01e0479792090dc5fec72de48b3e44dc"],["/react-gh/static/media/CardBack.85e64487.png","85e6448732403d3082d6d3f1ada7fca5"],["/react-gh/static/media/Chain.47a7a26f.png","47a7a26fe5e18c51109d8c5618df8561"],["/react-gh/static/media/Curse.e37e2cd1.png","e37e2cd198552d495613b29b142b073b"],["/react-gh/static/media/Heal.cfb84ada.png","cfb84adaabdb1018c968b17f1e7751f2"],["/react-gh/static/media/Leaf.5aa71b33.png","5aa71b33df6453b2716d5bbea3d1e7bd"],["/react-gh/static/media/Light.d58c91b7.png","d58c91b74321f2323b50a65b4585b2ac"],["/react-gh/static/media/Muddle.61d25eaf.png","61d25eafa8aa55a946d1444b18cd8473"],["/react-gh/static/media/Night.232bcd7c.png","232bcd7c0523af20f06c4bc36eb83557"],["/react-gh/static/media/Plus.47d5f17d.png","47d5f17d3ea79ab1639b8c4bc09e2592"],["/react-gh/static/media/Poison.5727122d.png","5727122d7667b6e9c66045292a9b21e3"],["/react-gh/static/media/Wind.e1cb5031.png","e1cb5031c5f146dbac977c578e99129a"],["/react-gh/static/media/Wound.2a6a7e62.png","2a6a7e6275718f84be3986ef09e7fa63"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/react-gh/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});